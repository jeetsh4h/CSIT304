Follow Moodle to install OpenGL,,,
use python 3.11 and manually download all the wheel files

Line Drawing Algorithm 

Know the derivation of the Bresenham's Algorithm
- for both m > 1 and m <= 1


3-D to 2-D projection is essentially dimensionality reduction
using your eyes is essentially projection


the axes are translated in such a way that the transformation about a point P, turns into translation about origin
essentially apply a translation to every point in such a way that the point P can be treated as the origin

Therefore, you perform negative translation (essentially translate everything to -P) and then the X trabsformation and 
then translate it back.



In this class we are assuming that all vectors are represented as a column vector
Thereore, when multiply the trabsformation matrices, make sure that the first transformation step is on the
most righthand side part


3D Transformation
^ The matrix is 4x3 (homogenous representation)


For rotation
Counter-clockwise rotation is positive; you are standing on the axis and looking at the origin

[[cos(theta), -sin(theta)],
 [sin(theta),  cos(theta)]]

T_theta^y is not the same,,, the negative signs switch up -> figure out the reason


To perform general transformation about an arbitrary line
then we rotate the line to be in the same plane as the z-axis (about one of the axes planes)*
then we rotate to match the line to be aligned with z-axis

*if we rotate about the x-axis, it places the line in x-z plane; about y-axis places it in the y-z plane

